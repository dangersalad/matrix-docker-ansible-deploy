# maubot is a Matrix <-> Discord bridge
# See: https://github.com/tulir/maubot

matrix_maubot_enabled: true

# See: https://mau.dev/tulir/maubot/container_registry
matrix_maubot_docker_image: "dangersalad/maubot:latest"
matrix_maubot_docker_image_force_pull: "{{ matrix_maubot_docker_image.endswith(':latest') }}"

matrix_maubot_base_path: "{{ matrix_base_data_path }}/maubot"
matrix_maubot_config_path: "{{ matrix_maubot_base_path }}/config"
matrix_maubot_plugin_path: "{{ matrix_maubot_base_path }}/plugins"
matrix_maubot_data_path: "{{ matrix_maubot_base_path }}/data"

matrix_maubot_public_endpoint: "/_matrix/maubot"

matrix_maubot_homeserver_address: 'http://matrix-synapse:8008'
matrix_maubot_homeserver_domain: '{{ matrix_domain }}'

# Controls whether the matrix-discord container exposes its HTTP port (tcp/8080 in the container).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:9006"), or empty string to not expose.
matrix_maubot_container_http_host_bind_port: ''

# A list of extra arguments to pass to the container
matrix_maubot_container_extra_arguments: []

# List of systemd services that matrix-maubot.service depends on.
matrix_maubot_systemd_required_services_list: ['docker.service']

# List of systemd services that matrix-maubot.service wants
matrix_maubot_systemd_wanted_services_list: []

matrix_maubot_matrix_registration_shared_secret: ''

# Default configuration template which covers the generic use case.
# You can customize it by controlling the various variables inside it.
#
# For a more advanced customization, you can extend the default (see `matrix_maubot_configuration_extension_yaml`)
# or completely replace this variable with your own template.
matrix_maubot_configuration_yaml: |
  # The full URI to the database. SQLite and Postgres are fully supported.
  # Other DBMSes supported by SQLAlchemy may or may not work.
  # Format examples:
  #   SQLite:   sqlite:///filename.db
  #   Postgres: postgres://username:password@hostname/dbname
  database: sqlite:////data/maubot.db
  
  plugin_directories:
      # The directory where uploaded new plugins should be stored.
      upload: /plugins
      # The directories from which plugins should be loaded.
      # Duplicate plugin IDs will be moved to the trash.
      load:
      - /plugins
      # The directory where old plugin versions and conflicting plugins should be moved.
      # Set to "delete" to delete files immediately.
      trash: /data/trash
      # The directory where plugin databases should be stored.
      db: /plugins
  
  server:
      # The IP and port to listen to.
      hostname: 0.0.0.0
      port: 8080
      # Public base URL where the server is visible.
      public_url: https://{{ matrix_maubot_homeserver_domain }}
      # The base management API path.
      base_path: /_matrix/maubot/v1
      # The base path for the UI.
      ui_base_path: /_matrix/maubot
      # The base path for plugin endpoints. The instance ID will be appended directly.
      plugin_base_path: /_matrix/maubot/plugin/
      # Override path from where to load UI resources.
      # Set to false to using pkg_resources to find the path.
      override_resource_path: false
      # The base appservice API path. Use / for legacy appservice API and /_matrix/app/v1 for v1.
      appservice_base_path: /_matrix/app/v1
      # The shared secret to sign API access tokens.
      # Set to "generate" to generate and save a new token at startup.
      unshared_secret: generate
  
  # Shared registration secrets to allow registering new users from the management UI
  registration_secrets:
      {{ matrix_maubot_homeserver_domain }}:
          # Client-server API URL
          url: {{ matrix_maubot_homeserver_address }}
          # registration_shared_secret from synapse config
          secret: {{ matrix_maubot_matrix_registration_shared_secret }}
  
  # List of administrator users. Plaintext passwords will be bcrypted on startup. Set empty password
  # to prevent normal login. Root is a special user that can't have a password and will always exist.
  admins:
      root: ""
  
  # API feature switches.
  api_features:
      login: true
      plugin: true
      plugin_upload: true
      instance: true
      instance_database: true
      client: true
      client_proxy: true
      client_auth: true
      dev_open: true
      log: true
  
  # Python logging configuration.
  #
  # See section 16.7.2 of the Python documentation for more info:
  # https://docs.python.org/3.6/library/logging.config.html#configuration-dictionary-schema
  logging:
      version: 1
      formatters:
          colored:
              (): maubot.lib.color_log.ColorFormatter
              format: "[%(asctime)s] [%(levelname)s@%(name)s] %(message)s"
          normal:
              format: "[%(asctime)s] [%(levelname)s@%(name)s] %(message)s"
      handlers:
          file:
              class: logging.handlers.RotatingFileHandler
              formatter: normal
              filename: /data/maubot.log
              maxBytes: 10485760
              backupCount: 10
          console:
              class: logging.StreamHandler
              formatter: colored
      loggers:
          maubot:
              level: DEBUG
          mautrix:
              level: DEBUG
          aiohttp:
              level: INFO
      root:
          level: DEBUG
          handlers: [file, console]
  
  
matrix_maubot_configuration_extension_yaml: |
  # Your custom YAML configuration goes here.
  # This configuration extends the default starting configuration (`matrix_maubot_configuration_yaml`).
  #
  # You can override individual variables from the default configuration, or introduce new ones.
  #
  # If you need something more special, you can take full control by
  # completely redefining `matrix_maubot_configuration_yaml`.

matrix_maubot_configuration_extension: "{{ matrix_maubot_configuration_extension_yaml|from_yaml if matrix_maubot_configuration_extension_yaml|from_yaml is mapping else {} }}"

# Holds the final configuration (a combination of the default and its extension).
# You most likely don't need to touch this variable. Instead, see `matrix_maubot_configuration_yaml`.
matrix_maubot_configuration: "{{ matrix_maubot_configuration_yaml|from_yaml|combine(matrix_maubot_configuration_extension, recursive=True) }}"

